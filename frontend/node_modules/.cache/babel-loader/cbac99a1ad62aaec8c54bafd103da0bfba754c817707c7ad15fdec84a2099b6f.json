{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\DepopDash\\\\depop-dash\\\\frontend\\\\src\\\\pages\\\\Upload.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n//import { Cloudinary } from '@cloudinary/url-gen';\n//import { AdvancedImage } from '@cloudinary/react';\n//import { fill } from '@cloudinary/url-gen/actions/resize';\n\n// Initialize Cloudinary instance\n//const cld = new Cloudinary({\n//cloud: {\n// cloudName: 'YOUR_CLOUD_NAME', // Replace with your Cloudinary cloud name\n//},\n//});\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  // Handle file upload\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'YOUR_UPLOAD_PRESET'); // Replace with your upload preset\n\n      // Upload the image to Cloudinary\n      fetch(`https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/image/upload`, {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        console.log('Uploaded image URL:', data.secure_url);\n        // Use the uploaded image URL as needed, for example, display it or apply transformations\n      }).catch(error => console.error('Error uploading image:', error));\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '120px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        background: 'linear-gradient(135deg, rgba(255, 0, 0, 0.9) 0%, rgba(200, 0, 0, 0.85) 50%, rgba(139, 0, 0, 1) 100%)',\n        backdropFilter: 'blur(10px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontSize: \"24px\",\n        color: \"white\",\n        children: \"Product photography matters. We're here to help.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        ...getRootProps(),\n        sx: {\n          width: '70vw',\n          height: '200px',\n          border: '2px dashed grey',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: '8px',\n          backgroundColor: isDragActive ? '#f0f0f0' : '#fafafa',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Drop the files here ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Drag & drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          backgroundColor: 'white',\n          color: 'black',\n          ':hover': {\n            backgroundColor: '#f0f0f0'\n          }\n        },\n        children: \"Process Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Upload, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["Box","Typography","Button","React","useCallback","useDropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","Upload","_s","onDrop","acceptedFiles","forEach","file","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","secure_url","catch","error","getRootProps","getInputProps","isDragActive","children","sx","height","display","flexDirection","alignItems","justifyContent","textAlign","background","backdropFilter","variant","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","mt","width","border","borderRadius","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["C:/dev/DepopDash/depop-dash/frontend/src/pages/Upload.tsx"],"sourcesContent":["import { Box, Typography, Button } from '@mui/material';\r\nimport React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n//import { Cloudinary } from '@cloudinary/url-gen';\r\n//import { AdvancedImage } from '@cloudinary/react';\r\n//import { fill } from '@cloudinary/url-gen/actions/resize';\r\n\r\n// Initialize Cloudinary instance\r\n//const cld = new Cloudinary({\r\n  //cloud: {\r\n   // cloudName: 'YOUR_CLOUD_NAME', // Replace with your Cloudinary cloud name\r\n  //},\r\n//});\r\n\r\nconst Upload: React.FC = () => {\r\n  // Handle file upload\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('upload_preset', 'YOUR_UPLOAD_PRESET'); // Replace with your upload preset\r\n\r\n      // Upload the image to Cloudinary\r\n      fetch(`https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/image/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log('Uploaded image URL:', data.secure_url);\r\n          // Use the uploaded image URL as needed, for example, display it or apply transformations\r\n        })\r\n        .catch((error) => console.error('Error uploading image:', error));\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          height: '120px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          textAlign: 'center',\r\n          background: 'linear-gradient(135deg, rgba(255, 0, 0, 0.9) 0%, rgba(200, 0, 0, 0.85) 50%, rgba(139, 0, 0, 1) 100%)',\r\n          backdropFilter: 'blur(10px)',\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" fontSize={\"24px\"} color='white'>\r\n          Product photography matters. We're here to help.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          mt: 4,\r\n        }}\r\n      >\r\n        <Box\r\n          {...getRootProps()}\r\n          sx={{\r\n            width: '70vw',\r\n            height: '200px',\r\n            border: '2px dashed grey',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '8px',\r\n            backgroundColor: isDragActive ? '#f0f0f0' : '#fafafa',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <input {...getInputProps()} />\r\n          {isDragActive ? (\r\n            <Typography>Drop the files here ...</Typography>\r\n          ) : (\r\n            <Typography>Drag & drop some files here, or click to select files</Typography>\r\n          )}\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            mt: 3,\r\n            backgroundColor: 'white',\r\n            color: 'black',\r\n            ':hover': {\r\n              backgroundColor: '#f0f0f0',\r\n            },\r\n          }}\r\n        >\r\n          Process Photos\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}